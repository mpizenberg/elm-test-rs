name: CI

on: [pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            # target: x86_64-apple-darwin
            # target: aarch64-unknown-linux-gnu

    steps:
      - name: install musl-tools if musl target
        if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
        run: sudo apt install musl-tools

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Download cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-${{ matrix.target }}
            ${{ runner.os }}

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target }}

      #
      #
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: elm-test-rs
      #     path: target/x86_64-unknown-linux-musl/release/elm-test-rs

  # test:
  #   name: Test
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os:
  #         - ubuntu-latest
  #         - windows-latest
  #         - macos-latest
  #       rust:
  #         - stable
  #         - beta
  #         - nightly
  #
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: recursive
  #
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.rust }}
  #         override: true
  #         components: rustfmt, clippy
  #
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: build
  #
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: fmt
  #         args: --all -- --check
  #
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: --all
