name: CI

on: [pull_request]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: macos-latest
            target: x86_64-apple-darwin
            # target: aarch64-unknown-linux-gnu

    steps:
      - name: install musl-tools if musl target
        if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
        run: sudo apt install musl-tools

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Download cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ matrix.target }}-build-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target }}-build-
            ${{ matrix.target }}-

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Compress compiled binary
        if: ${{ !startsWith(matrix.os, 'windows') }}
        run: |
          cd target/${{ matrix.target }}/release
          tar czf elm-test-rs_${{ matrix.target }}.tar.gz elm-test-rs

      - uses: actions/upload-artifact@v2
        if: ${{ !startsWith(matrix.os, 'windows') }}
        with:
          name: elm-test-rs_${{ matrix.target }}.tar.gz
          path: target/${{ matrix.target }}/release/elm-test-rs_${{ matrix.target }}.tar.gz

      - uses: actions/upload-artifact@v2
        if: ${{ startsWith(matrix.os, 'windows') }}
        with:
          name: elm-test-rs_${{ matrix.target }}
          path: target/${{ matrix.target }}/release/elm-test-rs.exe

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        toolchain:
          - stable
          - beta

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Download cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ matrix.target }}-test-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target }}-test-
            ${{ matrix.target }}-

      - uses: actions-rs/cargo@v1
        with:
          command: test

  check_formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Check clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true

      - uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: -D warnings
        with:
          command: clippy
